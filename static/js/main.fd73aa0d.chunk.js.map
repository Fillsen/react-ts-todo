{"version":3,"sources":["components/Navbar.tsx","components/Footer.tsx","components/TForm.tsx","components/TList.tsx","pages/TPage.tsx","pages/AboutPage.tsx","App.tsx","index.tsx"],"names":["Navbar","className","href","id","to","Footer","target","rel","TForm","props","ref","useRef","onKeyPress","e","key","onAdd","current","value","type","placeholder","htmlFor","TList","todos","onRemove","onToggle","length","map","todo","classes","completed","push","join","checked","onChange","bind","title","onClick","preventDefault","removeHandler","TPage","useState","setTodos","useEffect","saved","JSON","parse","localStorage","getItem","setItem","stringify","newTodo","Date","now","prev","confirm","filter","AboutPage","history","useHistory","App","basename","exact","path","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fd73aa0d.chunk.js","sourcesContent":["import React, {FC} from 'react';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Navbar: FC = () => {\r\n    return (\r\n        <nav>\r\n            <div className=\"nav-wrapper blue lighten-1 px1\">\r\n                <a href=\"/\" className=\"brand-logo\">React + TypeScript</a>\r\n                <ul id=\"nav-mobile\" className=\"right hide-on-med-and-down\">\r\n                    <li><NavLink to=\"/\">Todo's</NavLink></li>\r\n                    <li><NavLink to=\"/about\">About</NavLink></li>\r\n                </ul>\r\n            </div>\r\n        </nav>\r\n    );\r\n};\r\n\r\nexport default Navbar;\r\n","import React, {FC} from 'react';\r\nimport '../App.css'\r\n\r\nconst Footer: FC = () => {\r\n    return (\r\n        <footer className=\"page-footer footer blue lighten-1\">\r\n            <div className=\"container\">\r\n                &copy; by Fillsen 2021\r\n                <a\r\n                    className=\"grey-text text-lighten-4 right\"\r\n                    href=\"https://github.com/Fillsen/react-ts-todo\"\r\n                    target='_blank'\r\n                    rel=\"noreferrer\">\r\n                    Project Repo\r\n                </a>\r\n            </div>\r\n        </footer>\r\n    );\r\n};\r\n\r\nexport default Footer;\r\n","import React, {useState, useRef} from 'react';\r\n\r\ninterface ITodoFormProps {\r\n    onAdd(title: string): void\r\n}\r\n\r\nconst TForm:React.FC<ITodoFormProps> = props => {\r\n    // const [title, setTitle] = useState<string>('')\r\n    //\r\n    // const changeHandler = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    //     setTitle(e.target.value)\r\n    // }\r\n\r\n    const ref = useRef<HTMLInputElement>(null)\r\n\r\n    const keyPressHandler = (e: React.KeyboardEvent) => {\r\n        if (e.key === 'Enter') {\r\n            props.onAdd(ref.current!.value)\r\n            ref.current!.value = ''\r\n            // console.log(title)\r\n            // setTitle('')\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className='input-field mt2'>\r\n            <input\r\n                onKeyPress={keyPressHandler}\r\n                ref={ref}\r\n                // onChange={changeHandler}\r\n                // value={title}\r\n                type=\"text\"\r\n                id='title'\r\n                placeholder='Example: Learn JavaScript' />\r\n            <label htmlFor=\"title\" className='active'>Input your todo</label>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default TForm;\r\n","import React from 'react';\r\nimport {ITodo} from \"../interfaces\";\r\n\r\ntype TListProps = {\r\n    todos: ITodo[]\r\n    onToggle(id: number): void\r\n    onRemove(id: number): void\r\n}\r\n\r\nconst TList:React.FC<TListProps> = ({todos, onRemove, onToggle}) => {\r\n    if (todos.length === 0) return <h5 className='center'>There a no todos</h5>\r\n\r\n    const removeHandler = (e: React.MouseEvent, id: number) => {\r\n        e.preventDefault()\r\n        onRemove(id)\r\n    }\r\n\r\n    return (\r\n        <ul>\r\n            {todos.map(todo => {\r\n                const classes = ['todo']\r\n                if (todo.completed) classes.push('completed')\r\n                return (\r\n                    <li className={classes.join(' ')} key={todo.id} >\r\n                        <label>\r\n                            <input type='checkbox' checked={todo.completed} onChange={onToggle.bind(null, todo.id)} />\r\n                            <span>{todo.title}</span>\r\n                            <i\r\n                                className='material-icons red-text'\r\n                                onClick={e => removeHandler(e, todo.id)}\r\n                            >\r\n                                delete\r\n                            </i>\r\n                        </label>\r\n                    </li>\r\n                )\r\n            })}\r\n        </ul>\r\n    );\r\n};\r\n\r\nexport default TList;\r\n","import React, {useEffect, useState} from 'react';\r\nimport TForm from \"../components/TForm\";\r\nimport TList from \"../components/TList\";\r\nimport {ITodo} from \"../interfaces\";\r\n\r\ndeclare var confirm: (approve: string) => boolean\r\n\r\nconst TPage: React.FC = () => {\r\n    const [todos, setTodos] = useState<ITodo[]>([])\r\n\r\n    useEffect(() => {\r\n        const saved = JSON.parse(localStorage.getItem('todos') || '[]') as ITodo[]\r\n        setTodos(saved)\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        localStorage.setItem('todos', JSON.stringify(todos))\r\n    }, [todos])\r\n\r\n    const addHandler = (title: string) => {\r\n        const newTodo:ITodo = {\r\n            id: Date.now(),\r\n            title: title,\r\n            completed: false,\r\n        }\r\n        setTodos(prev => [newTodo, ...prev])\r\n    }\r\n\r\n    const toggleHandler = (id: number) => {\r\n        setTodos(prev => prev.map(todo => {\r\n            if (todo.id === id) return {\r\n                ...todo,\r\n                completed: !todo.completed\r\n            }\r\n            return todo\r\n        }))\r\n    }\r\n\r\n    const removeHandler = (id: number) => {\r\n        const shouldRemove = confirm('Are you sure?')\r\n        if (shouldRemove) setTodos(prev => prev.filter(todo => todo.id !== id))\r\n    }\r\n    return <>\r\n        <TForm onAdd={addHandler} />\r\n        <TList\r\n            todos={todos}\r\n            onRemove={removeHandler}\r\n            onToggle={toggleHandler}\r\n        />\r\n    </>\r\n};\r\n\r\nexport default TPage\r\n","import React from 'react';\r\nimport {useHistory} from \"react-router-dom\";\r\n\r\nconst AboutPage: React.FC = () => {\r\n    const history = useHistory()\r\n    return <>\r\n        <h1>About</h1>\r\n        <p>Lorem ipsum dolor sit amet, consectetur adipisicing elit. Earum enim expedita facere fuga iste iusto magnam\r\n            maiores non quidem repellat.</p>\r\n        <button className='btn' onClick={() => history.push('/')}>Go back</button>\r\n    </>\r\n};\r\n\r\nexport default AboutPage;\r\n","import React from 'react';\nimport './App.css';\nimport Navbar from \"./components/Navbar\";\nimport Footer from \"./components/Footer\";\nimport {BrowserRouter as Router, Route, Switch} from \"react-router-dom\";\nimport TPage from \"./pages/TPage\";\nimport AboutPage from \"./pages/AboutPage\";\n\n\nconst App: React.FC = () => {\n    return (\n        <Router basename='/react-ts-todo'>\n            <Navbar/>\n            <div className='container'>\n                <Switch>\n                    <Route exact path='/' component={TPage}/>\n                    <Route exact path='/about' component={AboutPage}/>\n                </Switch>\n            </div>\n            <Footer/>\n        </Router>\n    )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}